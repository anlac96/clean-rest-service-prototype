openapi: 3.0.0
info:
  title: Book API
  description: A RESTful API for managing books.
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Local development server
paths:
  /books:
    get:
      summary: Get all books
      description: Retrieve a list of all books.
      responses:
        '200':
          description: A list of books.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
    post:
      summary: Create a new book
      description: Add a new book to the collection.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '201':
          description: The created book.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
  /books/{bookId}:
    get:
      summary: Get a book by ID
      description: Retrieve details of a specific book by its ID.
      parameters:
        - name: bookId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the book to retrieve.
      responses:
        '200':
          description: The book details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '404':
          description: Book not found.
    put:
      parameters:
        - name: bookId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the book to retrieve.
      summary: Update a book
      description: Update the details of an existing book.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '200':
          description: The updated book.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '404':
          description: Book not found.
    delete:
      summary: Delete a book
      description: Remove a book from the collection by its ID.
      parameters:
        - name: bookId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the book to delete.
      responses:
        '204':
          description: Book successfully deleted.
        '404':
          description: Book not found.
components:
  schemas:
    Book:
      type: object
      properties:
        bookId:
          type: string
          description: The unique identifier of the book.
        title:
          type: string
          description: The title of the book.
        author:
          type: string
          description: The author of the book.
        genre:
          type: string
          description: The genre of the book.
        price:
          type: number
          format: double
          description: The price of the book.
      required:
        - bookId
        - title
        - author
        - genre
        - price
